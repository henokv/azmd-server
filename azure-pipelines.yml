# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.11' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code
stages:
- stage: validate
  jobs:
  - job: validate
    steps:
    - task: GitVersion@5
      inputs:
        runtime: 'core'
    - script: |
        mkdir -p '$(GOBIN)'
        mkdir -p '$(GOPATH)/pkg'
        mkdir -p '$(modulePath)'
        shopt -s extglob
        shopt -s dotglob
        mv !(gopath) '$(modulePath)'
        echo '##vso[task.prependpath]$(GOBIN)'
        echo '##vso[task.prependpath]$(GOROOT)/bin'
      displayName: 'Set up the Go workspace'

    - script: |
        go version
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
        go build -o bin/azmd-server -v .
      workingDirectory: '$(modulePath)'
      displayName: 'Get dependencies, then build'
- stage: build
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')
  jobs:
  - job: validate
    steps:
    - task: GitVersion@5
      inputs:
        runtime: 'core'
    - script: |
        mkdir -p '$(GOBIN)'
        mkdir -p '$(GOPATH)/pkg'
        mkdir -p '$(modulePath)'
        shopt -s extglob
        shopt -s dotglob
        mv !(gopath) '$(modulePath)'
        echo '##vso[task.prependpath]$(GOBIN)'
        echo '##vso[task.prependpath]$(GOROOT)/bin'
      displayName: 'Set up the Go workspace'

    - script: |
        go version
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
        go build -o bin/azmd-server -v .
      workingDirectory: '$(modulePath)'
      displayName: 'Get dependencies, then build'
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(modulePath)/bin'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'azmd-server'
        publishLocation: 'Container'
    - task: GitHubRelease@1
      inputs:
        gitHubConnection: 'github.com_henokv'
        repositoryName: 'henokv/azmd-server'
        action: 'create'
        target: '$(Build.SourceVersion)'
        tagSource: 'userSpecifiedTag'
        tag: '$(GitVersion.SemVer)'
        changeLogCompareToRelease: 'lastFullRelease'
        changeLogType: 'commitBased'
